-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dma_grabber_dma_grabber is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    is_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    is_r_TVALID : IN STD_LOGIC;
    is_r_TREADY : OUT STD_LOGIC;
    is_r_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    is_r_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    is_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    os_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    os_TVALID : OUT STD_LOGIC;
    os_TREADY : IN STD_LOGIC;
    os_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    os_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    os_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of dma_grabber_dma_grabber is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dma_grabber_dma_grabber,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.072000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=150,HLS_SYN_LUT=200,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter2_fsm_state3 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_iter2_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal en : STD_LOGIC_VECTOR (0 downto 0);
    signal size : STD_LOGIC_VECTOR (15 downto 0);
    signal p_start_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_size_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_cnt_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_en_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal is_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state2 : STD_LOGIC;
    signal ap_CS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter2_fsm_state3 : STD_LOGIC;
    signal p_start_V_load_load_fu_136_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_94_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal os_TDATA_blk_n : STD_LOGIC;
    signal p_start_V_load_reg_230 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_237 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_start_V_load_reg_230_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_237_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op45_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op55_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_predicate_op56_write_state3 : BOOLEAN;
    signal regslice_both_os_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal tmp_data_V_reg_241 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_reg_246 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_reg_251 : STD_LOGIC_VECTOR (3 downto 0);
    signal in_last_V_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_V_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln946_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln229_fu_200_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln30_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_iter0_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_iter2_fsm_state3_blk : STD_LOGIC;
    signal regslice_both_is_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal is_r_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal is_r_TVALID_int_regslice : STD_LOGIC;
    signal is_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_is_r_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_is_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal is_r_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_is_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_is_r_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_is_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal is_r_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_is_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_is_r_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_is_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal is_r_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_is_r_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_is_r_V_last_V_U_ack_in : STD_LOGIC;
    signal os_TVALID_int_regslice : STD_LOGIC;
    signal os_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_os_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_os_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_os_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_os_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_os_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_os_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_os_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_os_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_os_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_os_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_328 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dma_grabber_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        en : OUT STD_LOGIC_VECTOR (0 downto 0);
        size : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dma_grabber_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component dma_grabber_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        en => en,
        size => size,
        ap_local_deadlock => ap_local_deadlock);

    regslice_both_is_r_V_data_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => is_r_TDATA,
        vld_in => is_r_TVALID,
        ack_in => regslice_both_is_r_V_data_V_U_ack_in,
        data_out => is_r_TDATA_int_regslice,
        vld_out => is_r_TVALID_int_regslice,
        ack_out => is_r_TREADY_int_regslice,
        apdone_blk => regslice_both_is_r_V_data_V_U_apdone_blk);

    regslice_both_is_r_V_keep_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => is_r_TKEEP,
        vld_in => is_r_TVALID,
        ack_in => regslice_both_is_r_V_keep_V_U_ack_in,
        data_out => is_r_TKEEP_int_regslice,
        vld_out => regslice_both_is_r_V_keep_V_U_vld_out,
        ack_out => is_r_TREADY_int_regslice,
        apdone_blk => regslice_both_is_r_V_keep_V_U_apdone_blk);

    regslice_both_is_r_V_strb_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => is_r_TSTRB,
        vld_in => is_r_TVALID,
        ack_in => regslice_both_is_r_V_strb_V_U_ack_in,
        data_out => is_r_TSTRB_int_regslice,
        vld_out => regslice_both_is_r_V_strb_V_U_vld_out,
        ack_out => is_r_TREADY_int_regslice,
        apdone_blk => regslice_both_is_r_V_strb_V_U_apdone_blk);

    regslice_both_is_r_V_last_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => is_r_TLAST,
        vld_in => is_r_TVALID,
        ack_in => regslice_both_is_r_V_last_V_U_ack_in,
        data_out => is_r_TLAST_int_regslice,
        vld_out => regslice_both_is_r_V_last_V_U_vld_out,
        ack_out => is_r_TREADY_int_regslice,
        apdone_blk => regslice_both_is_r_V_last_V_U_apdone_blk);

    regslice_both_os_V_data_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_data_V_reg_241,
        vld_in => os_TVALID_int_regslice,
        ack_in => os_TREADY_int_regslice,
        data_out => os_TDATA,
        vld_out => regslice_both_os_V_data_V_U_vld_out,
        ack_out => os_TREADY,
        apdone_blk => regslice_both_os_V_data_V_U_apdone_blk);

    regslice_both_os_V_keep_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_keep_V_reg_246,
        vld_in => os_TVALID_int_regslice,
        ack_in => regslice_both_os_V_keep_V_U_ack_in_dummy,
        data_out => os_TKEEP,
        vld_out => regslice_both_os_V_keep_V_U_vld_out,
        ack_out => os_TREADY,
        apdone_blk => regslice_both_os_V_keep_V_U_apdone_blk);

    regslice_both_os_V_strb_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_strb_V_reg_251,
        vld_in => os_TVALID_int_regslice,
        ack_in => regslice_both_os_V_strb_V_U_ack_in_dummy,
        data_out => os_TSTRB,
        vld_out => regslice_both_os_V_strb_V_U_vld_out,
        ack_out => os_TREADY,
        apdone_blk => regslice_both_os_V_strb_V_U_apdone_blk);

    regslice_both_os_V_last_V_U : component dma_grabber_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_last_V_reg_256,
        vld_in => os_TVALID_int_regslice,
        ack_in => regslice_both_os_V_last_V_U_ack_in_dummy,
        data_out => os_TLAST,
        vld_out => regslice_both_os_V_last_V_U_vld_out,
        ack_out => os_TREADY,
        apdone_blk => regslice_both_os_V_last_V_U_apdone_blk);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter2_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
            else
                ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
            end if;
        end if;
    end process;


    p_cnt_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                p_cnt_V <= ap_const_lv16_0;
            else
                if ((ap_const_boolean_1 = ap_condition_328)) then
                    if (((tmp_nbreadreq_fu_94_p6 = ap_const_lv1_1) and (p_start_V = ap_const_lv1_1))) then 
                        p_cnt_V <= add_ln229_fu_200_p2;
                    elsif (((p_start_V_load_load_fu_136_p1 = ap_const_lv1_0) and (or_ln30_fu_158_p2 = ap_const_lv1_0))) then 
                        p_cnt_V <= ap_const_lv16_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    p_en_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                p_en_V <= ap_const_lv1_0;
            else
                if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (p_start_V_load_load_fu_136_p1 = ap_const_lv1_0))) then 
                    p_en_V <= en;
                end if; 
            end if;
        end if;
    end process;


    p_size_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                p_size_V <= ap_const_lv16_0;
            else
                if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (p_start_V_load_load_fu_136_p1 = ap_const_lv1_0) and (or_ln30_fu_158_p2 = ap_const_lv1_0))) then 
                    p_size_V <= size;
                end if; 
            end if;
        end if;
    end process;


    p_start_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                p_start_V <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_1 = ap_condition_328)) then
                    if (((tmp_nbreadreq_fu_94_p6 = ap_const_lv1_1) and (p_start_V = ap_const_lv1_1))) then 
                        p_start_V <= xor_ln946_fu_218_p2;
                    elsif (((p_start_V_load_load_fu_136_p1 = ap_const_lv1_0) and (or_ln30_fu_158_p2 = ap_const_lv1_0))) then 
                        p_start_V <= ap_const_lv1_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_nbreadreq_fu_94_p6 = ap_const_lv1_1) and (p_start_V = ap_const_lv1_1))) then
                in_last_V_reg_256 <= in_last_V_fu_212_p2;
                tmp_data_V_reg_241 <= is_r_TDATA_int_regslice;
                tmp_keep_V_reg_246 <= is_r_TKEEP_int_regslice;
                tmp_strb_V_reg_251 <= is_r_TSTRB_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                p_start_V_load_reg_230 <= p_start_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                p_start_V_load_reg_230_pp0_iter1_reg <= p_start_V_load_reg_230;
                tmp_reg_237_pp0_iter1_reg <= tmp_reg_237;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (p_start_V = ap_const_lv1_1))) then
                tmp_reg_237 <= tmp_nbreadreq_fu_94_p6;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (ap_CS_iter0_fsm, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_predicate_op45_read_state1, ap_predicate_op55_write_state2, ap_block_state2_io, ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, is_r_TVALID_int_regslice, os_TREADY_int_regslice)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_predicate_op45_read_state1, ap_predicate_op55_write_state2, ap_block_state2_io, ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, is_r_TVALID_int_regslice, os_TREADY_int_regslice)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))))) and not(((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state1) or ((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (is_r_TVALID_int_regslice = ap_const_logic_0))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;

    ap_NS_iter2_fsm_assign_proc : process (ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm, ap_CS_iter2_fsm_state3, ap_predicate_op55_write_state2, ap_block_state2_io, ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, os_TREADY_int_regslice)
    begin
        case ap_CS_iter2_fsm is
            when ap_ST_iter2_fsm_state3 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))) and not(((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) and ((ap_const_logic_0 = ap_CS_iter1_fsm_state2) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0))))))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                end if;
            when ap_ST_iter2_fsm_state0 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter2_fsm <= "XX";
        end case;
    end process;
    add_ln229_fu_200_p2 <= std_logic_vector(unsigned(p_cnt_V) + unsigned(ap_const_lv16_1));
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter1_fsm_state2 <= ap_CS_iter1_fsm(1);
    ap_CS_iter2_fsm_state3 <= ap_CS_iter2_fsm(1);

    ap_ST_iter0_fsm_state1_blk_assign_proc : process(ap_predicate_op45_read_state1, is_r_TVALID_int_regslice)
    begin
        if (((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0))) then 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter1_fsm_state2_blk_assign_proc : process(ap_predicate_op55_write_state2, ap_block_state2_io, os_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_iter1_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter2_fsm_state3_blk_assign_proc : process(ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, os_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) then 
            ap_ST_iter2_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_iter2_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op45_read_state1, is_r_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op55_write_state2, os_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ap_predicate_op55_write_state2, os_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op56_write_state3, os_TREADY_int_regslice)
    begin
                ap_block_state3_io <= ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, os_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_328_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_predicate_op45_read_state1, ap_predicate_op55_write_state2, ap_block_state2_io, ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, is_r_TVALID_int_regslice, os_TREADY_int_regslice)
    begin
                ap_condition_328 <= (not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1));
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_predicate_op45_read_state1_assign_proc : process(p_start_V, tmp_nbreadreq_fu_94_p6)
    begin
                ap_predicate_op45_read_state1 <= ((tmp_nbreadreq_fu_94_p6 = ap_const_lv1_1) and (p_start_V = ap_const_lv1_1));
    end process;


    ap_predicate_op55_write_state2_assign_proc : process(p_start_V_load_reg_230, tmp_reg_237)
    begin
                ap_predicate_op55_write_state2 <= ((tmp_reg_237 = ap_const_lv1_1) and (p_start_V_load_reg_230 = ap_const_lv1_1));
    end process;


    ap_predicate_op56_write_state3_assign_proc : process(p_start_V_load_reg_230_pp0_iter1_reg, tmp_reg_237_pp0_iter1_reg)
    begin
                ap_predicate_op56_write_state3 <= ((tmp_reg_237_pp0_iter1_reg = ap_const_lv1_1) and (p_start_V_load_reg_230_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    in_last_V_fu_212_p2 <= "1" when (add_ln229_fu_200_p2 = p_size_V) else "0";

    is_r_TDATA_blk_n_assign_proc : process(p_start_V, ap_CS_iter0_fsm_state1, tmp_nbreadreq_fu_94_p6, is_r_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_nbreadreq_fu_94_p6 = ap_const_lv1_1) and (p_start_V = ap_const_lv1_1))) then 
            is_r_TDATA_blk_n <= is_r_TVALID_int_regslice;
        else 
            is_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    is_r_TREADY <= regslice_both_is_r_V_data_V_U_ack_in;

    is_r_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_predicate_op45_read_state1, ap_predicate_op55_write_state2, ap_block_state2_io, ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, is_r_TVALID_int_regslice, os_TREADY_int_regslice)
    begin
        if ((not((((ap_predicate_op45_read_state1 = ap_const_boolean_1) and (is_r_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)))))) and (ap_predicate_op45_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            is_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            is_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln30_fu_158_p2 <= (xor_ln30_fu_152_p2 or p_en_V);

    os_TDATA_blk_n_assign_proc : process(ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, p_start_V_load_reg_230, tmp_reg_237, p_start_V_load_reg_230_pp0_iter1_reg, tmp_reg_237_pp0_iter1_reg, os_TREADY_int_regslice)
    begin
        if ((((tmp_reg_237_pp0_iter1_reg = ap_const_lv1_1) and (p_start_V_load_reg_230_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter2_fsm_state3)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (tmp_reg_237 = ap_const_lv1_1) and (p_start_V_load_reg_230 = ap_const_lv1_1)))) then 
            os_TDATA_blk_n <= os_TREADY_int_regslice;
        else 
            os_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    os_TVALID <= regslice_both_os_V_data_V_U_vld_out;

    os_TVALID_int_regslice_assign_proc : process(ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_predicate_op55_write_state2, ap_block_state2_io, ap_predicate_op56_write_state3, regslice_both_os_V_data_V_U_apdone_blk, ap_block_state3_io, os_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op55_write_state2 = ap_const_boolean_1) and (os_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_os_V_data_V_U_apdone_blk = ap_const_logic_1) or ((os_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)))))) and (ap_predicate_op55_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            os_TVALID_int_regslice <= ap_const_logic_1;
        else 
            os_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_start_V_load_load_fu_136_p1 <= p_start_V;
    tmp_nbreadreq_fu_94_p6 <= (0=>(is_r_TVALID_int_regslice), others=>'-');
    xor_ln30_fu_152_p2 <= (en xor ap_const_lv1_1);
    xor_ln946_fu_218_p2 <= (in_last_V_fu_212_p2 xor ap_const_lv1_1);
end behav;
